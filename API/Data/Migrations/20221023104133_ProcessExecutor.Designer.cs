// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221023104133_ProcessExecutor")]
    partial class ProcessExecutor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementConnectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InElementId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsMain")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OutElementId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InElementId");

                    b.HasIndex("OutElementId");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessConnections");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessElementInstanseType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProcessId");

                    b.ToTable("ProcessElements");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Processes");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessParamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamRouteType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParamType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProcessElementEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProcessEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("boolParam")
                        .HasColumnType("INTEGER");

                    b.Property<double>("doubleParam")
                        .HasColumnType("REAL");

                    b.Property<int>("intParam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("stringParam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessElementEntityId");

                    b.HasIndex("ProcessEntityId");

                    b.ToTable("ProcessParamEntity");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementConnectionEntity", b =>
                {
                    b.HasOne("API.Entities.ProcessExecutor.ProcessElementEntity", "InElement")
                        .WithMany("InConnections")
                        .HasForeignKey("InElementId");

                    b.HasOne("API.Entities.ProcessExecutor.ProcessElementEntity", "OutElement")
                        .WithMany("OutConnections")
                        .HasForeignKey("OutElementId");

                    b.HasOne("API.Entities.ProcessExecutor.ProcessEntity", "Process")
                        .WithMany("ProcessElementsConnections")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InElement");

                    b.Navigation("OutElement");

                    b.Navigation("Process");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementEntity", b =>
                {
                    b.HasOne("API.Entities.ProcessExecutor.ProcessEntity", "Process")
                        .WithMany("ProcessElements")
                        .HasForeignKey("ProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessParamEntity", b =>
                {
                    b.HasOne("API.Entities.ProcessExecutor.ProcessElementEntity", null)
                        .WithMany("ProcessElementParams")
                        .HasForeignKey("ProcessElementEntityId");

                    b.HasOne("API.Entities.ProcessExecutor.ProcessEntity", null)
                        .WithMany("ProcessParams")
                        .HasForeignKey("ProcessEntityId");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementEntity", b =>
                {
                    b.Navigation("InConnections");

                    b.Navigation("OutConnections");

                    b.Navigation("ProcessElementParams");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessEntity", b =>
                {
                    b.Navigation("ProcessElements");

                    b.Navigation("ProcessElementsConnections");

                    b.Navigation("ProcessParams");
                });
#pragma warning restore 612, 618
        }
    }
}
