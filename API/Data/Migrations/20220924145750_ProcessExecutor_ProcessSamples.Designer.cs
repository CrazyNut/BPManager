// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220924145750_ProcessExecutor_ProcessSamples")]
    partial class ProcessExecutor_ProcessSamples
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementConnection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InElementId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsMain")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OutElementId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InElementId");

                    b.HasIndex("OutElementId");

                    b.ToTable("ProcessElementConnections");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementSample", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProcessElementInstanseType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProcessElementSamples");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessParam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Condition")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ParamRouteType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ParamType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ProcessElementSampleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ProcessSampleId")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("boolParam")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("doubleParam")
                        .HasColumnType("REAL");

                    b.Property<int?>("intParam")
                        .HasColumnType("INTEGER");

                    b.Property<string>("stringParam")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProcessElementSampleId");

                    b.HasIndex("ProcessSampleId");

                    b.ToTable("ProcessParam");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessSample", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProcessSamples");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementConnection", b =>
                {
                    b.HasOne("API.Entities.ProcessExecutor.ProcessElementSample", "InElement")
                        .WithMany("InConnections")
                        .HasForeignKey("InElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Entities.ProcessExecutor.ProcessElementSample", "OutElement")
                        .WithMany("OutConnections")
                        .HasForeignKey("OutElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InElement");

                    b.Navigation("OutElement");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessParam", b =>
                {
                    b.HasOne("API.Entities.ProcessExecutor.ProcessElementSample", null)
                        .WithMany("ProcessElementParams")
                        .HasForeignKey("ProcessElementSampleId");

                    b.HasOne("API.Entities.ProcessExecutor.ProcessSample", null)
                        .WithMany("ProcessParams")
                        .HasForeignKey("ProcessSampleId");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessElementSample", b =>
                {
                    b.Navigation("InConnections");

                    b.Navigation("OutConnections");

                    b.Navigation("ProcessElementParams");
                });

            modelBuilder.Entity("API.Entities.ProcessExecutor.ProcessSample", b =>
                {
                    b.Navigation("ProcessParams");
                });
#pragma warning restore 612, 618
        }
    }
}
